{"ast":null,"code":"import React, { useState } from 'react';\nimport '../../css/pages/signupsignin.css';\nimport '../../css/reusables/positions.css';\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n// REMINDER, YOU MUST IMPORT jsPDF, jspdf-autotable, and format from dateFNS*******\n\nconst report = carSales => {\n  // initialize jsPDF\n  const doc = new jsPDF();\n  // define my columns\n  const tableColumn = [\"Id\", \"Make\", \"Model\", \"Year\", \"Sale Price\"];\n  // define an empty array of rows\n  const tableRows = [];\n\n  // for each car sale pass all its data into an array\n  carSales.forEach(car => {\n    const carSales = [car.id, car.make, car.model, car.year, car.salePrice];\n    // push each car sales info into a row\n    tableRows.push(carSales);\n  });\n\n  // startY is basically margin-top\n  doc.autoTable(tableColumn, tableRows, {\n    startY: 20\n  });\n  const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\n  // car info and margin-top + margin-left\n  doc.text(\"Car Sales for the Requested Period\", 14, 15);\n  // we define the name of our PDF file.\n  doc.save(`Sales_ report_${dateStr}.pdf`);\n};\nexport default report;","map":{"version":3,"names":["React","useState","jsPDF","report","carSales","doc","tableColumn","tableRows","forEach","car","id","make","model","year","salePrice","push","autoTable","startY","date","Date","split","dateStr","text","save"],"sources":["C:/Users/Manskers/git/CarDealership/car-dealership-front/src/components/reusables/reportGenerator.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport '../../css/pages/signupsignin.css'\r\nimport '../../css/reusables/positions.css'\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n    // REMINDER, YOU MUST IMPORT jsPDF, jspdf-autotable, and format from dateFNS*******\r\n\r\n\r\n  const  report= carSales => {\r\n    // initialize jsPDF\r\n  const doc = new jsPDF();\r\n    // define my columns\r\n  const tableColumn = [\"Id\", \"Make\", \"Model\", \"Year\", \"Sale Price\"];\r\n    // define an empty array of rows\r\n  const tableRows = [];\r\n\r\n  // for each car sale pass all its data into an array\r\n  carSales.forEach(car => {\r\n    const carSales = [\r\n      car.id,\r\n      car.make,\r\n      car.model,\r\n      car.year,\r\n      car.salePrice,\r\n\r\n    ];\r\n    // push each car sales info into a row\r\n    tableRows.push(carSales);\r\n  });\r\n\r\n    // startY is basically margin-top\r\n    doc.autoTable(tableColumn, tableRows, { startY: 20 });\r\n    const date = Date().split(\" \");\r\n    // we use a date string to generate our filename.\r\n    const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\r\n    // car info and margin-top + margin-left\r\n    doc.text(\"Car Sales for the Requested Period\", 14, 15);\r\n    // we define the name of our PDF file.\r\n    doc.save(`Sales_ report_${dateStr}.pdf`);\r\n  };\r\n\r\n\r\nexport default report;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kCAAkC;AACzC,OAAO,mCAAmC;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACpB;;AAGF,MAAOC,MAAM,GAAEC,QAAQ,IAAI;EACzB;EACF,MAAMC,GAAG,GAAG,IAAIH,KAAK,CAAC,CAAC;EACrB;EACF,MAAMI,WAAW,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,CAAC;EAC/D;EACF,MAAMC,SAAS,GAAG,EAAE;;EAEpB;EACAH,QAAQ,CAACI,OAAO,CAACC,GAAG,IAAI;IACtB,MAAML,QAAQ,GAAG,CACfK,GAAG,CAACC,EAAE,EACND,GAAG,CAACE,IAAI,EACRF,GAAG,CAACG,KAAK,EACTH,GAAG,CAACI,IAAI,EACRJ,GAAG,CAACK,SAAS,CAEd;IACD;IACAP,SAAS,CAACQ,IAAI,CAACX,QAAQ,CAAC;EAC1B,CAAC,CAAC;;EAEA;EACAC,GAAG,CAACW,SAAS,CAACV,WAAW,EAAEC,SAAS,EAAE;IAAEU,MAAM,EAAE;EAAG,CAAC,CAAC;EACrD,MAAMC,IAAI,GAAGC,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EAC9B;EACA,MAAMC,OAAO,GAAGH,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC;EAC/D;EACAb,GAAG,CAACiB,IAAI,CAAC,oCAAoC,EAAE,EAAE,EAAE,EAAE,CAAC;EACtD;EACAjB,GAAG,CAACkB,IAAI,CAAE,iBAAgBF,OAAQ,MAAK,CAAC;AAC1C,CAAC;AAGH,eAAelB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}